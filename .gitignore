node_modules

// const express = require("express");
// const mongoose = require("mongoose");
// const Card = require("./models/cardModel");
// const cors = require("cors");
// const app = express();
// const PORT = 3000;

// /*************
//  * MIDDLEWARE
//  *************/
// app.use(cors({ origin: "*" }));
// app.use(express.json());

// /***************************************=
//  * Algorithm for card number validation
//  ***************************************/
// const validateCardNumber = (cardNumber) => {
//   let sum = 0;
//   let alternate = false;
//   console.log("Validating card number:", cardNumber);
//   for (let i = cardNumber.length - 1; i >= 0; i--) {
//     let n = parseInt(cardNumber[i], 10);
//     if (alternate) {
//       n *= 2;
//       if (n > 9) n -= 9;
//     }
//     sum += n;
//     alternate = !alternate;
//   }
//   console.log("Computed sum:", sum);
//   return sum % 10 === 0;
// };

// /**********
//  * ROUTES
//  **********/
// //Create a user
// app.post("/users", async (req, res) => {
//   try {
//     const card = await Card.create(req.body);
//     res.status(200).json(card);
//   } catch (error) {
//     console.log(error.message);
//     res.status(500).json({ message: error.message });
//   }
// });

// app.get("/", (req, res) => {
//   res.send("HELLO PIZZA API");
// });

// app.get("/cards", async (req, res) => {
//   try {
//     const cards = await Card.find();
//     res.status(200).json(cards);
//   } catch (err) {
//     res
//       .status(500)
//       .json({ message: "Error retrieving cards", error: err.message });
//   }
// });

// /****************************
//  * Card Validation Endpoint
//  ****************************/
// app.post("/verifyCard", async (req, res) => {
//   try {
//     const { pizzaDetails, cardDetails } = req.body;

//     if (!pizzaDetails || !cardDetails) {
//       return res.status(400).json({ message: "Missing required data" });
//     }

//     // Updated pizzaDetails validation
//     const { amount, deliveryLocation } = pizzaDetails;

//     if (!amount || typeof amount !== "number" || amount <= 0) {
//       return res.status(400).json({ message: "Invalid pizza amount" });
//     }

//     if (!deliveryLocation || typeof deliveryLocation !== "string") {
//       return res
//         .status(400)
//         .json({ message: "Invalid or missing delivery location" });
//     }

//     const { cardHolderName, cardNumber, cardExpirationDate, cardSecurityCode } =
//       cardDetails;

//     /** Validate Card Details */
//     if (
//       !cardHolderName ||
//       !cardNumber ||
//       !cardExpirationDate ||
//       !cardSecurityCode
//     ) {
//       return res.status(400).json({ message: "All fields are required" });
//     }

//     /** Validate card number format (exactly 16 digits) */
//     if (!/^\d{16}$/.test(cardNumber)) {
//       return res
//         .status(400)
//         .json({ message: "Card number must be exactly 16 digits" });
//     }

//     /** Check if card number already exists in the database */
//     const existingCard = await Card.findOne({ cardNumber });
//     if (existingCard) {
//       return res.status(400).json({ message: "Card number already exists" });
//     }

//     /** Validate security code length */
//     if (cardSecurityCode.length !== 3) {
//       return res
//         .status(400)
//         .json({ message: "Invalid security code length (must be 3 digits)" });
//     }

//     /** Validate expiration date format (MM/YY) */
//     if (!/^(0[1-9]|1[0-2])\/\d{2}$/.test(cardExpirationDate)) {
//       return res
//         .status(400)
//         .json({ message: "Invalid expiration date format (MM/YY required)" });
//     }

//     /** Check card expiration date */
//     const [month, year] = cardExpirationDate.split("/");
//     const currentDate = new Date();
//     const expiryDate = new Date(`20${year}`, month - 1);

//     if (expiryDate < currentDate) {
//       return res.status(400).json({ message: "Card has expired" });
//     }

//     /** Validate card number using validateCardNumber Logic */
//     if (!validateCardNumber(cardNumber)) {
//       return res.status(400).json({ message: "Invalid card number" });
//     }

//     /** Save the card to the database */
//     const card = new Card({
//       cardHolderName,
//       cardNumber,
//       cardExpirationDate,
//       cardSecurityCode,
//     });
//     await card.save();

//     res.status(201).json({
//       message: "Card is valid",
//       deliveryDetails: {
//         amount,
//         deliveryLocation,
//       },
//     });
//   } catch (error) {
//     if (error.code === 11000) {
//       return res.status(400).json({ message: "Card number already exists" });
//     }
//     res
//       .status(500)
//       .json({ message: "Internal server error", error: error.message });
//   }
// });

// mongoose.set("strictQuery", false);
// mongoose
//   .connect(
//     "mongodb+srv://vj1502003:victor2003@card-verification.hxvgi.mongodb.net/Card-Verification?retryWrites=true&w=majority"
//   )
//   .then(() => {
//     console.log("Connected to MongoDB");
//     app.listen(PORT, () => {
//       console.log(`Server is listening at port 3000`);
//     });
//   })
//   .catch((error) => {
//     console.error("Connection error:", error.message);
//   });


/// CARD MODEL///

// // const { text } = require("express");
// // const mongoose = require("mongoose");

// // const userCardSchema = mongoose.Schema(
// //   {
// //     cardHolderName: {
// //       type: String,
// //       required: true,
// //       trim: true,
// //     },

// //     cardNumber: {
// //       type: String,
// //       required: true,
// //       unique: [true, "Please input valid card number"],
// //       minlength: 16,
// //       maxlength: 16,
// //       match: /^[0-9]+$/,
// //     },

// //     cardExpirationDate: {
// //       type: String,
// //       required: true,
// //       match: /^(0[1-9]|1[0-2])\/\d{2}$/,
// //     },
// //     cardSecurityCode: {
// //       type: String,
// //       required: true,
// //       minlength: 3,
// //       maxlength: 3,
// //       match: /^[0-9]+$/,
// //     },
// //   },
// //   {
// //     timestamps: true,
// //   }
// // );

// // const Card = mongoose.model("Card", userCardSchema);
// // module.exports = Card;

// // const { Sequelize, DataTypes } = require("sequelize");
// // const sequelize = new Sequelize("database", "username", "password", {
// //   host: "localhost",
// //   dialect: "mysql", // Or 'postgres', 'sqlite', etc., depending on your database
// // });

// // const Card = sequelize.define(
// //   "Card",
// //   {
// //     cardHolderName: {
// //       type: DataTypes.STRING,
// //       allowNull: false,
// //     },
// //     cardNumber: {
// //       type: DataTypes.STRING,
// //       allowNull: false,
// //       unique: true,
// //       validate: {
// //         len: [16, 16],
// //         isNumeric: true,
// //       },
// //     },
// //     cardExpirationDate: {
// //       type: DataTypes.STRING,
// //       allowNull: false,
// //       validate: {
// //         is: /^(0[1-9]|1[0-2])\/\d{2}$/,
// //       },
// //     },
// //     cardSecurityCode: {
// //       type: DataTypes.STRING,
// //       allowNull: false,
// //       validate: {
// //         len: [3, 3],
// //         isNumeric: true,
// //       },
// //     },
// //   },
// //   {
// //     tableName: "user_cards", // Optional: specify table name
// //     timestamps: true, // Enables createdAt and updatedAt fields
// //   }
// // );

// // module.exports = Card;

// const { Sequelize, DataTypes } = require("sequelize");
// require("dotenv").config(); // Load environment variables

// // Create a Sequelize instance using environment variables
// const sequelize = new Sequelize(
//   process.env.DB_NAME || "database",
//   process.env.DB_USER || "username",
//   process.env.DB_PASSWORD || "password",
//   {
//     host: process.env.DB_HOST || "localhost",
//     dialect: process.env.DB_DIALECT || "mysql", // Default is MySQL
//     logging: false, // Disable SQL query logging (optional)
//   }
// );

// // Define the Card model
// const Card = sequelize.define(
//   "Card",
//   {
//     cardHolderName: {
//       type: DataTypes.STRING,
//       allowNull: false,
//     },
//     cardNumber: {
//       type: DataTypes.STRING,
//       allowNull: false,
//       unique: true,
//       validate: {
//         len: [16, 16],
//         isNumeric: true,
//       },
//     },
//     cardExpirationDate: {
//       type: DataTypes.STRING,
//       allowNull: false,
//       validate: {
//         is: /^(0[1-9]|1[0-2])\/\d{2}$/, // MM/YY format validation
//       },
//     },
//     cardSecurityCode: {
//       type: DataTypes.STRING,
//       allowNull: false,
//       validate: {
//         len: [3, 3],
//         isNumeric: true,
//       },
//     },
//   },
//   {
//     tableName: "user_cards", // Specify table name in the database
//     timestamps: true, // Adds createdAt and updatedAt columns
//   }
// );

// // Test the database connection (optional)
// sequelize
//   .authenticate()
//   .then(() => {
//     console.log("Database connection successful!");
//   })
//   .catch((error) => {
//     console.error("Unable to connect to the database:", error);
//   });

// module.exports = { sequelize, Card };





// const { Sequelize, DataTypes } = require("sequelize");
// require("dotenv").config(); // Load environment variables

// // Create a Sequelize instance using environment variables
// const sequelize = new Sequelize(
//   process.env.DB_NAME || "dulepjey_getdelightpizza",
//   process.env.DB_USER || "Getdelightpizza",
//   process.env.DB_PASSWORD || "1234567890Abcd!@#$%",
//   {
//     host: process.env.DB_HOST || "localhost:3306",
//     dialect: process.env.DB_DIALECT || "mysql", // Default is MySQL
//     logging: false, // Disable SQL query logging (optional)
//   }
// );

// // Define the Card model
// const Card = sequelize.define(
//   "Card",
//   {
//     cardHolderName: {
//       type: DataTypes.STRING,
//       allowNull: false,
//       validate: {
//         notEmpty: true, // Ensures the value is not an empty string
//       },
//     },
//     cardNumber: {
//       type: DataTypes.STRING,
//       allowNull: false,
//       unique: true,
//       validate: {
//         len: [16, 16], // Ensures the card number is exactly 16 characters
//         isNumeric: true, // Ensures the value contains only numbers
//       },
//     },
//     c: {
//       type: DataTypes.STRING,
//       allowNull: false,
//       validate: {
//         is: /^(0[1-9]|1[0-2])\/\d{2}$/, // Validates MM/YY format
//       },
//     },
//     cardSecurityCode: {
//       type: DataTypes.STRING,
//       allowNull: false,
//       validate: {
//         len: [3, 3], // Ensures the security code is exactly 3 characters
//         isNumeric: true, // Ensures the value contains only numbers
//       },
//     },
//   },
//   {
//     tableName: "user_cards", // Specify table name in the database
//     timestamps: true, // Adds createdAt and updatedAt columns
//   }
// );

// // Test the database connection (optional)
// sequelize
//   .authenticate()
//   .then(() => {
//     console.log("Database connection successful!");
//   })
//   .catch((error) => {
//     console.error("Unable to connect to the database:", error);
//   });

// module.exports = { sequelize, Card };
// ardExpirationDate;


<section class="our-menu position-r mb-150">
      <div class="our-menu-vacter wow fadeInRight">
        <img src="./images/tamato.png" alt="Vacter Image" />
      </div>
      <div class="container">
        <div class="section-heading wow fadeInLeft">
          <h5 class="sub-title">Popular Dishes</h5>
          <h2>Browse Our Menu</h2>
        </div>
      </div>
      <div class="wow fadeInLeft">
        <div class="our-menu-content right-padding">
          <div class="menu-slider owl-carousel">
            <div class="menu-item-box rotate-img">
              <div class="menu-item-img">
                <a href="book-now.html"
                  ><img src="./images/pizza-4.png" alt="Menu Image"
                /></a>
              </div>
              <div class="menu-item-info">
                <div class="menu-item-head">
                  <div class="menu-item-title">
                    <h5><a href="book-now.html">Cheese pizza</a></h5>
                  </div>
                  <div class="menu-item-price">
                    <span>$25.00</span>
                  </div>
                </div>
                <div class="item-rating">
                  <ul>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                  </ul>
                </div>
                <div class="menu-item-des">
                  <p>
                    All the Lorem Ipsum generators on to Internet tend to repeat
                  </p>
                </div>
                <div class="menu-item-order">
                  <a href="book-now.html" class="btn-ct btn-small"
                    ><img src="images/cart-icon-white.png" alt="Cart Icon" />
                    Order Now</a
                  >
                </div>
              </div>
            </div>
            <div class="menu-item-box rotate-img">
              <div class="menu-item-img">
                <a href="book-now.html"
                  ><img src="images/pizza-1.png" alt="Menu Image"
                /></a>
              </div>
              <div class="menu-item-info">
                <div class="menu-item-head">
                  <div class="menu-item-title">
                    <h5><a href="book-now.html">Shrimp pizza</a></h5>
                  </div>
                  <div class="menu-item-price">
                    <span>$35.00</span>
                  </div>
                </div>
                <div class="item-rating">
                  <ul>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                  </ul>
                </div>
                <div class="menu-item-des">
                  <p>
                    All the Lorem Ipsum generators on to Internet tend to repeat
                  </p>
                </div>
                <div class="menu-item-order">
                  <a href="book-now.html" class="btn-ct btn-small"
                    ><img src="images/cart-icon-white.png" alt="Cart Icon" />
                    Order Now</a
                  >
                </div>
              </div>
            </div>
            <div class="menu-item-box rotate-img">
              <div class="menu-item-img">
                <a href="book-now.html"
                  ><img src="images/pizza-2.png" alt="Menu Image"
                /></a>
              </div>
              <div class="menu-item-info">
                <div class="menu-item-head">
                  <div class="menu-item-title">
                    <h5><a href="book-now.html">Seafood pizza</a></h5>
                  </div>
                  <div class="menu-item-price">
                    <span>$65.00</span>
                  </div>
                </div>
                <div class="item-rating">
                  <ul>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                  </ul>
                </div>
                <div class="menu-item-des">
                  <p>
                    All the Lorem Ipsum generators on to Internet tend to repeat
                  </p>
                </div>
                <div class="menu-item-order">
                  <a href="book-now.html" class="btn-ct btn-small"
                    ><img src="images/cart-icon-white.png" alt="Cart Icon" />
                    Order Now</a
                  >
                </div>
              </div>
            </div>
            <div class="menu-item-box rotate-img">
              <div class="menu-item-img">
                <a href="book-now.html"
                  ><img src="images/pizza-3.png" alt="Menu Image"
                /></a>
              </div>
              <div class="menu-item-info">
                <div class="menu-item-head">
                  <div class="menu-item-title">
                    <h5><a href="book-now.html">Cheese pizza</a></h5>
                  </div>
                  <div class="menu-item-price">
                    <span>$45.00</span>
                  </div>
                </div>
                <div class="item-rating">
                  <ul>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                  </ul>
                </div>
                <div class="menu-item-des">
                  <p>
                    All the Lorem Ipsum generators on to Internet tend to repeat
                  </p>
                </div>
                <div class="menu-item-order">
                  <a href="book-now.html" class="btn-ct btn-small"
                    ><img src="images/cart-icon-white.png" alt="Cart Icon" />
                    Order Now</a
                  >
                </div>
              </div>
            </div>
            <div class="menu-item-box rotate-img">
              <div class="menu-item-img">
                <a href="book-now.html"
                  ><img src="images/pizza-4.png" alt="Menu Image"
                /></a>
              </div>
              <div class="menu-item-info">
                <div class="menu-item-head">
                  <div class="menu-item-title">
                    <h5><a href="book-now.html">Cheese pizza</a></h5>
                  </div>
                  <div class="menu-item-price">
                    <span>$25.00</span>
                  </div>
                </div>
                <div class="item-rating">
                  <ul>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                  </ul>
                </div>
                <div class="menu-item-des">
                  <p>
                    All the Lorem Ipsum generators on to Internet tend to repeat
                  </p>
                </div>
                <div class="menu-item-order">
                  <a href="book-now.html" class="btn-ct btn-small"
                    ><img src="images/cart-icon-white.png" alt="Cart Icon" />
                    Order Now</a
                  >
                </div>
              </div>
            </div>
            <div class="menu-item-box rotate-img">
              <div class="menu-item-img">
                <a href="book-now.html"
                  ><img src="images/pizza-1.png" alt="Menu Image"
                /></a>
              </div>
              <div class="menu-item-info">
                <div class="menu-item-head">
                  <div class="menu-item-title">
                    <h5><a href="book-now.html">Shrimp pizza</a></h5>
                  </div>
                  <div class="menu-item-price">
                    <span>$35.00</span>
                  </div>
                </div>
                <div class="item-rating">
                  <ul>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                  </ul>
                </div>
                <div class="menu-item-des">
                  <p>
                    All the Lorem Ipsum generators on to Internet tend to repeat
                  </p>
                </div>
                <div class="menu-item-order">
                  <a href="book-now.html" class="btn-ct btn-small"
                    ><img src="images/cart-icon-white.png" alt="Cart Icon" />
                    Order Now</a
                  >
                </div>
              </div>
            </div>
            <div class="menu-item-box rotate-img">
              <div class="menu-item-img">
                <a href="book-now.html"
                  ><img src="images/pizza-2.png" alt="Menu Image"
                /></a>
              </div>
              <div class="menu-item-info">
                <div class="menu-item-head">
                  <div class="menu-item-title">
                    <h5><a href="book-now.html">Seafood pizza</a></h5>
                  </div>
                  <div class="menu-item-price">
                    <span>$65.00</span>
                  </div>
                </div>
                <div class="item-rating">
                  <ul>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                  </ul>
                </div>
                <div class="menu-item-des">
                  <p>
                    All the Lorem Ipsum generators on to Internet tend to repeat
                  </p>
                </div>
                <div class="menu-item-order">
                  <a href="book-now.html" class="btn-ct btn-small"
                    ><img src="images/cart-icon-white.png" alt="Cart Icon" />
                    Order Now</a
                  >
                </div>
              </div>
            </div>
            <div class="menu-item-box rotate-img">
              <div class="menu-item-img">
                <a href="book-now.html"
                  ><img src="images/pizza-3.png" alt="Menu Image"
                /></a>
              </div>
              <div class="menu-item-info">
                <div class="menu-item-head">
                  <div class="menu-item-title">
                    <h5><a href="book-now.html">Cheese pizza</a></h5>
                  </div>
                  <div class="menu-item-price">
                    <span>$45.00</span>
                  </div>
                </div>
                <div class="item-rating">
                  <ul>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                    <li><i class="fa fa-star" aria-hidden="true"></i></li>
                  </ul>
                </div>
                <div class="menu-item-des">
                  <p>
                    All the Lorem Ipsum generators on to Internet tend to repeat
                  </p>
                </div>
                <div class="menu-item-order">
                  <a href="book-now.html" class="btn-ct btn-small"
                    ><img src="images/cart-icon-white.png" alt="Cart Icon" />
                    Order Now</a
                  >
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>








    <!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Pizza Order and Payment</title>
    <style>
      /* Reset some default styles for better control */
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f4f4f9;
        color: #333;
        padding: 30px;
      }

      /* Main form container */
      form {
        max-width: 500px;
        margin: 0 auto;
        padding: 30px;
        background-color: #ffffff;
        border: 1px solid #e3e3e3;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
      }

      h2 {
        text-align: center;
        color: #2a2a2a;
        font-size: 28px;
        margin-bottom: 30px;
      }

      /* Section and input styling */
      fieldset {
        border: none;
        margin-bottom: 25px;
      }

      legend {
        font-size: 1.25em;
        font-weight: 600;
        color: #f26c4f;
        margin-bottom: 15px;
      }

      label {
        display: block;
        margin-bottom: 8px;
        font-weight: 500;
        color: #333;
      }

      input,
      select {
        width: 100%;
        padding: 12px;
        margin-bottom: 18px;
        border: 1px solid #ddd;
        border-radius: 8px;
        font-size: 16px;
        background-color: #fafafa;
        transition: all 0.3s ease;
      }

      input:focus,
      select:focus {
        outline: none;
        border-color: #f26c4f;
        box-shadow: 0 0 5px rgba(242, 108, 79, 0.3);
      }

      .totalPrice {
        font-size: 1.2em;
        font-weight: bold;
        color: #f26c4f;
        text-align: center;
        margin-top: 10px;
      }

      .message {
        text-align: center;
        font-weight: bold;
        margin-top: 20px;
      }

      /* Button styles */
      button {
        width: 100%;
        padding: 12px;
        background-color: #f26c4f;
        color: white;
        font-size: 18px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      button:hover {
        background-color: #f47d5a;
        transform: translateY(-2px);
      }

      /* Mobile responsiveness */
      @media (max-width: 600px) {
        form {
          padding: 20px;
        }

        h2 {
          font-size: 24px;
        }

        button {
          font-size: 16px;
        }

        .totalPrice {
          font-size: 1em;
        }
      }
    </style>
  </head>
  <body>
    <form id="pizzaOrderForm">
      <h2>Order Your Pizza</h2>

      <!-- Pizza Details Section -->
      <fieldset>
        <legend>Pizza Details</legend>
        <label for="pizzaAmount">Quantity</label>
        <input
          type="number"
          id="pizzaAmount"
          name="pizzaAmount"
          placeholder="Enter number of pizzas"
          min="1"
          required
        />

        <label for="deliveryLocation">Delivery Location</label>
        <input
          type="text"
          id="deliveryLocation"
          name="deliveryLocation"
          placeholder="Enter delivery address"
          required
        />

        <!-- Display the total price -->
        <div class="totalPrice" id="totalPrice">Total Price: $0</div>
      </fieldset>

      <!-- Card Details Section -->
      <fieldset>
        <legend>Card Details</legend>
        <label for="cardHolderName">Cardholder Name</label>
        <input
          type="text"
          id="cardHolderName"
          name="cardHolderName"
          placeholder="Enter your name"
          required
        />

        <label for="cardNumber">Card Number</label>
        <input
          type="text"
          id="cardNumber"
          name="cardNumber"
          placeholder="1234567890123456"
          maxlength="16"
          pattern="\d{16}"
          required
        />

        <label for="cardExpirationDate">Expiration Date (MM/YY)</label>
        <input
          type="text"
          id="cardExpirationDate"
          name="cardExpirationDate"
          placeholder="MM/YY"
          pattern="(0[1-9]|1[0-2])/\d{2}"
          required
        />

        <label for="cardSecurityCode">Security Code (CVV)</label>
        <input
          type="text"
          id="cardSecurityCode"
          name="cardSecurityCode"
          placeholder="123"
          maxlength="3"
          pattern="\d{3}"
          required
        />
      </fieldset>

      <!-- Submit Button -->
      <button type="submit">Place Order</button>
      <div class="message" id="responseMessage"></div>
    </form>

    <script>
      const form = document.getElementById("pizzaOrderForm");
      const responseMessage = document.getElementById("responseMessage");
      const pizzaAmountInput = document.getElementById("pizzaAmount");
      const totalPriceDisplay = document.getElementById("totalPrice");

      const pizzaPrice = 5000; // Price for one pizza

      // Event listener to update total price whenever pizza amount changes
      pizzaAmountInput.addEventListener("input", () => {
        const amount = parseInt(pizzaAmountInput.value, 10);
        if (amount > 0) {
          const totalPrice = amount * pizzaPrice;
          totalPriceDisplay.textContent = `Total Price: $${totalPrice}`;
        } else {
          totalPriceDisplay.textContent = `Total Price: $0`;
        }
      });

      form.addEventListener("submit", async (event) => {
        event.preventDefault(); // Prevent form from submitting normally

        // Gather form data
        const formData = new FormData(form);

        const requestData = {
          pizzaDetails: {
            amount: parseInt(formData.get("pizzaAmount"), 10),
            deliveryLocation: formData.get("deliveryLocation"),
          },
          cardDetails: {
            cardHolderName: formData.get("cardHolderName"),
            cardNumber: formData.get("cardNumber"),
            cardExpirationDate: formData.get("cardExpirationDate"),
            cardSecurityCode: formData.get("cardSecurityCode"),
          },
        };

        try {
          const response = await fetch("http://localhost:3000/verifyCard", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(requestData),
          });

          const result = await response.json();

          if (response.ok) {
            responseMessage.style.color = "green";
            responseMessage.textContent = result.message;
          } else {
            responseMessage.style.color = "red";
            responseMessage.textContent =
              result.message || "Verification failed.";
          }
        } catch (error) {
          responseMessage.style.color = "red";
          responseMessage.textContent = "An error occurred. Please try again.";
        }
      });
    </script>
  </body>
</html>
